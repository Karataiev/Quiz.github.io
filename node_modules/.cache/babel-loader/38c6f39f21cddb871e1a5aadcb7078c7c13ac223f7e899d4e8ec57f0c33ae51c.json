{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programing\\\\Test Task\\\\quiz-app\\\\src\\\\components\\\\GenderContent\\\\GenderContent.js\",\n  _s = $RefreshSig$();\nimport { QuestionContent } from \"../QuestionContent/QuestionContent\";\nimport \"./GenderContent.scss\";\nimport female from \"../../assets/icons/female.png\";\nimport male from \"../../assets/icons/male.png\";\nimport other from \"../../assets/icons/other.png\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { chooseGender } from \"../../redux/action\";\nimport { useTranslation } from \"react-i18next\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const GenderContent = () => {\n  _s();\n  const contentArr = [\"What gender do you identify with?\", \"Please share how do you identify yourself\"];\n  const genderArr = [{\n    type: \"Female\",\n    icon: female\n  }, {\n    type: \"Male\",\n    icon: male\n  }, {\n    type: \"Other\",\n    icon: other\n  }];\n  const lng = useSelector(state => state.lng);\n  const {\n    t,\n    i18n\n  } = useTranslation();\n  useEffect(() => {\n    console.log(lng);\n    i18n.changeLanguage(lng);\n    console.log(t(\"igor\"));\n  }, []);\n\n  // const changeLanguage = (language) => {\n  //   i18n.changeLanguage(language);\n  // };\n\n  const dispatch = useDispatch();\n  const handleClick = value => {\n    dispatch(chooseGender(value));\n    localStorage.setItem(\"gender\", JSON.stringify(value));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"genderContentContainer\",\n    children: [/*#__PURE__*/_jsxDEV(QuestionContent, {\n      content: contentArr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listOfOption\",\n      children: genderArr.map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: () => handleClick(el.type),\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/quiz/3\",\n          className: \"linkContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: el.icon,\n            alt: el.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: el.type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)\n      }, el.type, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(GenderContent, \"gdwPY70suQfBjnnjLLlCWX6wMaE=\", false, function () {\n  return [useSelector, useTranslation, useDispatch];\n});\n_c = GenderContent;\nvar _c;\n$RefreshReg$(_c, \"GenderContent\");","map":{"version":3,"names":["QuestionContent","female","male","other","Link","useDispatch","useSelector","chooseGender","useTranslation","useEffect","jsxDEV","_jsxDEV","GenderContent","_s","contentArr","genderArr","type","icon","lng","state","t","i18n","console","log","changeLanguage","dispatch","handleClick","value","localStorage","setItem","JSON","stringify","className","children","content","fileName","_jsxFileName","lineNumber","columnNumber","map","el","onClick","to","src","alt","_c","$RefreshReg$"],"sources":["D:/Programing/Test Task/quiz-app/src/components/GenderContent/GenderContent.js"],"sourcesContent":["import { QuestionContent } from \"../QuestionContent/QuestionContent\";\r\nimport \"./GenderContent.scss\";\r\nimport female from \"../../assets/icons/female.png\";\r\nimport male from \"../../assets/icons/male.png\";\r\nimport other from \"../../assets/icons/other.png\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { chooseGender } from \"../../redux/action\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { useEffect } from \"react\";\r\n\r\nexport const GenderContent = () => {\r\n  const contentArr = [\r\n    \"What gender do you identify with?\",\r\n    \"Please share how do you identify yourself\",\r\n  ];\r\n\r\n  const genderArr = [\r\n    {\r\n      type: \"Female\",\r\n      icon: female,\r\n    },\r\n    {\r\n      type: \"Male\",\r\n      icon: male,\r\n    },\r\n    {\r\n      type: \"Other\",\r\n      icon: other,\r\n    },\r\n  ];\r\n\r\n  const lng = useSelector((state) => state.lng);\r\n\r\n  const { t, i18n } = useTranslation();\r\n\r\n  useEffect(() => {\r\n    console.log(lng);\r\n    i18n.changeLanguage(lng);\r\n\r\n    console.log(t(\"igor\"));\r\n  }, []);\r\n\r\n  // const changeLanguage = (language) => {\r\n  //   i18n.changeLanguage(language);\r\n  // };\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = (value) => {\r\n    dispatch(chooseGender(value));\r\n    localStorage.setItem(\"gender\", JSON.stringify(value));\r\n  };\r\n\r\n  return (\r\n    <div className=\"genderContentContainer\">\r\n      <QuestionContent content={contentArr} />\r\n\r\n      <ul className=\"listOfOption\">\r\n        {genderArr.map((el) => (\r\n          <li key={el.type} onClick={() => handleClick(el.type)}>\r\n            <Link to=\"/quiz/3\" className=\"linkContent\">\r\n              <img src={el.icon} alt={el.type} />\r\n              <span>{el.type}</span>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programing\\\\Test Task\\\\quiz-app\\\\src\\\\components\\\\HateContent\\\\HateContent.js\",\n  _s = $RefreshSig$();\nimport { Link } from \"react-router-dom\";\nimport \"./HateContent.scss\";\nimport { ConfirmButton } from \"../ConfirmButton/ConfirmButton\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const HateContent = () => {\n  _s();\n  const [isCheckedOne, setIsCheckedOne] = useState(false);\n  const [isCheckedTwo, setIsCheckedTwo] = useState(false);\n  const [isCheckedThree, setIsCheckedThree] = useState(false);\n  const [isCheckedFour, setIsCheckedFour] = useState(false);\n  const hateArr = [\"Lack of logic\", \"A slow speed\", \"Lack of humor\", \"Way too generic ending\"];\n  const handleChecked = e => {\n    console.log(1);\n    const target = e.target;\n    hateArr.forEach(el => {\n      console.log(2);\n      if (target.textContent === el) {\n        console.log(3);\n        target.classList.add(\"checkedParent\");\n        target.children[1].classList.add(\"checkedChild\");\n        target.children[1].style.backgroundColor = \"#e4229b\";\n        if (target.classList.contains(\"checkedParent\")) {\n          console.log(4);\n          target.classList.remove(\"checkedParent\");\n          target.children[1].classList.remove(\"checkedChild\");\n          target.children[1].style.backgroundColor = \"#6d4376\";\n        }\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"hateContentContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"hateQuestionContent\",\n      children: [\"What do you \", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"hate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this), \" the most in a book?\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"listOfOption\",\n      children: hateArr.map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n        onClick: e => handleChecked(e),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: el\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, el, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConfirmButton, {\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n_s(HateContent, \"v/od/J8w2nVVxfxWUZBPtDQT8bs=\");\n_c = HateContent;\nvar _c;\n$RefreshReg$(_c, \"HateContent\");","map":{"version":3,"names":["Link","ConfirmButton","useState","jsxDEV","_jsxDEV","HateContent","_s","isCheckedOne","setIsCheckedOne","isCheckedTwo","setIsCheckedTwo","isCheckedThree","setIsCheckedThree","isCheckedFour","setIsCheckedFour","hateArr","handleChecked","e","console","log","target","forEach","el","textContent","classList","add","children","style","backgroundColor","contains","remove","className","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["D:/Programing/Test Task/quiz-app/src/components/HateContent/HateContent.js"],"sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport \"./HateContent.scss\";\r\nimport { ConfirmButton } from \"../ConfirmButton/ConfirmButton\";\r\nimport { useState } from \"react\";\r\n\r\nexport const HateContent = () => {\r\n  const [isCheckedOne, setIsCheckedOne] = useState(false);\r\n  const [isCheckedTwo, setIsCheckedTwo] = useState(false);\r\n  const [isCheckedThree, setIsCheckedThree] = useState(false);\r\n  const [isCheckedFour, setIsCheckedFour] = useState(false);\r\n\r\n  const hateArr = [\r\n    \"Lack of logic\",\r\n    \"A slow speed\",\r\n    \"Lack of humor\",\r\n    \"Way too generic ending\",\r\n  ];\r\n\r\n  const handleChecked = (e) => {\r\n    console.log(1);\r\n    const target = e.target;\r\n    hateArr.forEach((el) => {\r\n    console.log(2);\r\n\r\n      if (target.textContent === el) {\r\n    console.log(3);\r\n\r\n        target.classList.add(\"checkedParent\");\r\n        target.children[1].classList.add(\"checkedChild\");\r\n        target.children[1].style.backgroundColor = \"#e4229b\";\r\n\r\n        if (target.classList.contains(\"checkedParent\")) {\r\n    console.log(4);\r\n\r\n          target.classList.remove(\"checkedParent\");\r\n          target.children[1].classList.remove(\"checkedChild\");\r\n          target.children[1].style.backgroundColor = \"#6d4376\";\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"hateContentContainer\">\r\n      <span className=\"hateQuestionContent\">\r\n        What do you <span>hate</span> the most in a book?\r\n      </span>\r\n\r\n      <ul className=\"listOfOption\">\r\n        {hateArr.map((el) => (\r\n          <li key={el} onClick={(e) => handleChecked(e)}>\r\n            <span>{el}</span>\r\n            <div className=\"checkbox\" />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <ConfirmButton>Next</ConfirmButton>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
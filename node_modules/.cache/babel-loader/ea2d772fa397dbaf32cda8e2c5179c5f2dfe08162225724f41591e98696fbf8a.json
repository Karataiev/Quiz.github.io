{"ast":null,"code":"var _jsxFileName = \"D:\\\\Programing\\\\Test Task\\\\quiz-app\\\\src\\\\components\\\\TopicsListItem\\\\TopicsListItem.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"./TopicsListItem.scss\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { chooseTopics, removeTopics } from \"../../redux/action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TopicsListItem = ({\n  info\n}) => {\n  _s();\n  const [isChecked, setIsChecked] = useState(false);\n  const stateTopicsArr = useSelector(state => state.topicsArr);\n  const dispatch = useDispatch();\n  const handleClick = e => {\n    setIsChecked(!isChecked);\n    const target = e.target.closest(\"li\");\n    if (target.classList.contains(\"checkedItem\")) {\n      target.classList.remove(\"checkedItem\");\n      const index = stateTopicsArr.indexOf(target.textContent);\n      const newArr = [...stateTopicsArr];\n      newArr.splice(index, 1);\n      dispatch(removeTopics(newArr));\n    } else if (stateTopicsArr.length < 3) {\n      target.classList.add(\"checkedItem\");\n      dispatch(chooseTopics(target.textContent));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"topicsListItem\",\n    onClick: e => handleClick(e),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      value: isChecked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: info.image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: info.value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(TopicsListItem, \"3+NcUtr3hhhHgPabc9hUTc7j0kQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = TopicsListItem;\nvar _c;\n$RefreshReg$(_c, \"TopicsListItem\");","map":{"version":3,"names":["useEffect","useState","useDispatch","useSelector","chooseTopics","removeTopics","jsxDEV","_jsxDEV","TopicsListItem","info","_s","isChecked","setIsChecked","stateTopicsArr","state","topicsArr","dispatch","handleClick","e","target","closest","classList","contains","remove","index","indexOf","textContent","newArr","splice","length","add","className","onClick","children","type","value","fileName","_jsxFileName","lineNumber","columnNumber","src","image","_c","$RefreshReg$"],"sources":["D:/Programing/Test Task/quiz-app/src/components/TopicsListItem/TopicsListItem.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport \"./TopicsListItem.scss\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { chooseTopics, removeTopics } from \"../../redux/action\";\r\n\r\nexport const TopicsListItem = ({ info }) => {\r\n  const [isChecked, setIsChecked] = useState(false);\r\n  const stateTopicsArr = useSelector((state) => state.topicsArr);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = (e) => {\r\n    setIsChecked(!isChecked);\r\n\r\n    const target = e.target.closest(\"li\");\r\n    if (target.classList.contains(\"checkedItem\")) {\r\n      target.classList.remove(\"checkedItem\");\r\n      const index = stateTopicsArr.indexOf(target.textContent);\r\n      const newArr = [...stateTopicsArr];\r\n      newArr.splice(index, 1);\r\n      dispatch(removeTopics(newArr));\r\n    } else if (stateTopicsArr.length < 3) {\r\n      target.classList.add(\"checkedItem\");\r\n      dispatch(chooseTopics(target.textContent));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <li className=\"topicsListItem\" onClick={(e) => handleClick(e)}>\r\n      <input type=\"checkbox\" value={isChecked} />\r\n      <img src={info.image} />\r\n      <span>{info.value}</span>\r\n    </li>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAO,uBAAuB;AAC9B,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY,EAAEC,YAAY,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,OAAO,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMY,cAAc,GAAGV,WAAW,CAAEW,KAAK,IAAKA,KAAK,CAACC,SAAS,CAAC;EAC9D,MAAMC,QAAQ,GAAGd,WAAW,CAAC,CAAC;EAE9B,MAAMe,WAAW,GAAIC,CAAC,IAAK;IACzBN,YAAY,CAAC,CAACD,SAAS,CAAC;IAExB,MAAMQ,MAAM,GAAGD,CAAC,CAACC,MAAM,CAACC,OAAO,CAAC,IAAI,CAAC;IACrC,IAAID,MAAM,CAACE,SAAS,CAACC,QAAQ,CAAC,aAAa,CAAC,EAAE;MAC5CH,MAAM,CAACE,SAAS,CAACE,MAAM,CAAC,aAAa,CAAC;MACtC,MAAMC,KAAK,GAAGX,cAAc,CAACY,OAAO,CAACN,MAAM,CAACO,WAAW,CAAC;MACxD,MAAMC,MAAM,GAAG,CAAC,GAAGd,cAAc,CAAC;MAClCc,MAAM,CAACC,MAAM,CAACJ,KAAK,EAAE,CAAC,CAAC;MACvBR,QAAQ,CAACX,YAAY,CAACsB,MAAM,CAAC,CAAC;IAChC,CAAC,MAAM,IAAId,cAAc,CAACgB,MAAM,GAAG,CAAC,EAAE;MACpCV,MAAM,CAACE,SAAS,CAACS,GAAG,CAAC,aAAa,CAAC;MACnCd,QAAQ,CAACZ,YAAY,CAACe,MAAM,CAACO,WAAW,CAAC,CAAC;IAC5C;EACF,CAAC;EAED,oBACEnB,OAAA;IAAIwB,SAAS,EAAC,gBAAgB;IAACC,OAAO,EAAGd,CAAC,IAAKD,WAAW,CAACC,CAAC,CAAE;IAAAe,QAAA,gBAC5D1B,OAAA;MAAO2B,IAAI,EAAC,UAAU;MAACC,KAAK,EAAExB;IAAU;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3ChC,OAAA;MAAKiC,GAAG,EAAE/B,IAAI,CAACgC;IAAM;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACxBhC,OAAA;MAAA0B,QAAA,EAAOxB,IAAI,CAAC0B;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAET,CAAC;AAAC7B,EAAA,CA5BWF,cAAc;EAAA,QAEFL,WAAW,EACjBD,WAAW;AAAA;AAAAwC,EAAA,GAHjBlC,cAAc;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}